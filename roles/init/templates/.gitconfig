# See http://michaelwales.com/articles/make-gitconfig-work-for-you/

[alias]
    # Add and remove all changes, note how this alias is calling another alias
    addremove = !git r && git add . --all
    
    # Show all of my configured aliases
    aliases = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\ \t => \\2/' | sort
    
    # ...
    all = add . --all
    
    # For when you made that commit a bit too early, amend
    amend = !git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend
    
    # Show all branches
    br = branch -av
    
    # Show the current branch name (usefull for shell prompts)
    brname = !git branch | grep ^* | awk '{ print $2 }'
    
    # Delete a branch
    brdel = branch -D
    
    # ...
    ci = commit
    
    # ...
    changes = "!f() { git log --pretty=format:'* %s' $1..$2; }; f"
    
    # Which files are receiving the most "love"
    churn = !git log --all -M -C --name-only --format='format:' $@ | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print count,file} {print $1 , $2}'
    
    # ...
    co = checkout
    
    # View the log and diff for a commit (previous if no SHA1 provided)
    details = log -n1 -p --format=fuller
    
    # Save a repo as a tarball
    export = archive -o latest.tar.gz -9 --prefix=latest/
    
    # Unstage changes from the index
    unstage = reset HEAD --
    
    # View a pretty git log with branch tree
    g = !git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    
    # ...
    in = pull --dry-run
    
    # Return a list of commit SHA1s
    l = "!f() { git log $* | grep '^commit ' | cut -f 2 -d ' '; }; f"
    
    # ...
    out = log -- # Return the repository's root directory (usefull for shell prompts)branches --not --remotes
    
    # Remove deleted files
    r = !git ls-files -z --deleted | xargs -0 git rm
    
    # Return the repository's root directory (usefull for shell prompts)
    root = rev-parse --show-toplevel
    
    # ...
    st = status
    
    # Update all submodules
    subup = submodule update --init
    
    # List all tags
    tags = tag -l
    
    # Start a new local repository and perform initial commit
    this = !git init && git add . && git commit -m \"Initial commit.\"
    
    # Thin out older metadata within the repository, reduceses filesystem footprint
    trim = !git reflog expire --expire=now --all && git gc --prune=now
#   hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
  	hist = log --pretty=format:'%Cred%h%Creset %ad | %s%Cgreen (%cr)%C(yellow)%d% %C(bold blue) [%an]%Creset' --graph --date=short

	  type = cat-file -t
	  dump = cat-file -p

[credential]
    helper = store
#   helper = osxkeychain

[color]
    ui = true

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = yellow
    changed = green
    untracked = red

[core]
    autocrlf = false
#   safecrlf = true
    compression = 9
    excludesfile = ~/.gitignore
    filemode = false

[diff]
    mnemonicprefix = true

[merge]
    log = true
    ff = false

[push]
    default = simple

[url "https://bitbucket.org/"]
    insteadOf = bb:

[url "https://github.com/"]
    insteadOf = gh:

[url "https://gist.github.com/"]
    insteadOf = gist:

[user]
	name = Andreas Keye
	email = andreas.keye@gmail.com

[url "https://"]
	insteadOf = git://

[pull]
	rebase = true

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[init]
	defaultBranch = trunk
